pctMathWhite = mathWhite / mathAll)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(corrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
reg <- read_csv("D5 SHSAT Registrations and Testers.csv")
school <- read_csv("2016 School Explorer.csv")
head(reg)
head(school)
reg<- reg %>%
rename(school = `School name`,
year = `Year of SHST`,
grade = `Grade level`,
enroll = `Enrollment on 10/31`,
registered = `Number of students who registered for the SHSAT`,
took = `Number of students who took the SHSAT`)
#Finding the average number of students at each school, how many registered, and how many took the test
reg<- reg %>%
group_by(school) %>%
mutate_if(is.numeric, mean) %>%
mutate_if(is.character, funs(paste(unique(.), collapse = "_"))) %>%
distinct()
#Changing the case will let us match and eventually join the tables.
reg$school<-toupper(reg$school)
#Let's remove some columns that have no use for our future analysis.
reg<-reg %>%
select(-year )%>%
select(-grade)
#Calculating percentages of those who registered of the total population, registered AND took the test, and those who took the test of the total population
reg<-reg%>%
mutate(regPct = registered/enroll)%>%
mutate(tookPct = took/enroll)%>%
mutate(yield = took/registered)
#What does the table currently look like?
head(reg)
#Let's clean up the other sheet
school<-read_csv("2016 School Explorer.csv")
#what does the table look like?
head (school)
#renaming some columns
head(school)
school<- school %>%
rename(school = `School Name`,
address = `Address (Full)`,
DBN = `Location Code`,
lat =  Latitude,
long = Longitude,
zip = Zip,
eni = `Economic Need Index`,
district = District,
commSchool = `Community School?`,
income = `School Income Estimate`,
pctELL = `Percent ELL`,
pctAsian = `Percent Asian`,
pctBlack = `Percent Black`,
pctBlackHispanic = `Percent Black / Hispanic`,
pctHispanic = `Percent Hispanic`,
pctWhite = `Percent White`,
pctAttend = `Student Attendance Rate`,
pctAbsentChronic = `Percent of Students Chronically Absent`,
pctRigor = `Rigorous Instruction %`,
ratingRigor = `Rigorous Instruction Rating`,
pctCollab = `Collaborative Teachers %`,
ratingCollab = `Collaborative Teachers Rating`,
pctSupp = `Supportive Environment %`,
ratingSupp = `Supportive Environment Rating`,
pctLeader = `Effective School Leadership %`,
ratingLeader = `Effective School Leadership Rating`,
pctCommunity = `Strong Family-Community Ties %`,
ratingCommunity = `Strong Family-Community Ties Rating`,
pctTrust = `Trust %`,
ratingTrust = `Trust Rating`,
avgELA = `Average ELA Proficiency`,
avgMath = `Average Math Proficiency`,
mathAll = `Grade 8 Math - All Students Tested`,
mathAll4 = `Grade 8 Math 4s - All Students`,
mathBlack = `Grade 8 Math 4s - Black or African American`,
mathHispanic = `Grade 8 Math 4s - Hispanic or Latino`,
mathAsian = `Grade 8 Math 4s - Asian or Pacific Islander`,
mathWhite = `Grade 8 Math 4s - White`,
elaAll = `Grade 8 ELA - All Students Tested`,
elaAll4 = `Grade 8 ELA 4s - All Students`,
elaBlack = `Grade 8 ELA 4s - Black or African American`,
elaHispanic = `Grade 8 ELA 4s - Hispanic or Latino`,
elaAsian = `Grade 8 ELA 4s - Asian or Pacific Islander`,
elaWhite = `Grade 8 ELA 4s - White` )
#remove unneccessary columns
school<-school%>%
select(-`Adjusted Grade`)%>%
select(-`New?`)%>%
select(-`Other Location Code in LCGMS`)%>%
select(-`SED Code`)%>%
select(-starts_with('Grade'))
#now we want to join the tables together
school_clean <- full_join(school, reg, by = "DBN" )
#changing some columns to numeric values (as they should be)
school_clean<- school_clean %>%
mutate_at(vars(contains('pct')),funs(as.numeric(gsub("%", "", ., fixed = TRUE))/100)) %>%
mutate(income = as.numeric(gsub('\\$|,', '', income))) %>%
mutate(eni = as.numeric(eni))%>%
mutate(avgELA = as.numeric(avgELA),
avgMath = as.numeric(avgMath))
#making some final touches on our new table
school_clean <- school_clean%>%
filter(!is.na(school.x))%>%
select(-school.y)%>%
rename(school = school.x)
#let's turn some qualitative ratings into quantitative scores. First, let's create a function to make creating these new columns easier.
quantScore <- function(x){
if_else(grepl("Not Meeting Target", x),1 ,
if_else(grepl("Approaching Target", x),2 ,
if_else(grepl("Meeting Target", x),3 ,
if_else(grepl("Exceeding Target", x), 4, 0))))
}
school_clean<- school_clean%>%
mutate(quantRigor = quantScore(ratingRigor)) %>%
mutate(quantCollab = quantScore(ratingCollab)) %>%
mutate(quantSupp = quantScore(ratingSupp)) %>%
mutate(quantLeader = quantScore(ratingLeader)) %>%
mutate(quantCommunity = quantScore(ratingCommunity)) %>%
mutate(quantTrust = quantScore(ratingTrust))
school_clean <- school_clean%>%
mutate( pctELA4 = elaAll4 / elaAll,
pctELABlack = elaBlack / elaAll,
pctELAHispanic = elaHispanic / elaAll,
pctELAAsian = elaAsian / elaAll,
pctELAWhite = elaWhite/ elaAll,
pctMath4 = mathAll4 / mathAll,
pctMathBlack = mathBlack / mathAll,
pctMathHispanic = mathHispanic / mathAll,
pctMathAsian = mathAsian / mathAll,
pctMathWhite = mathWhite / mathAll)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(corrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(corrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
reg <- read_csv("D5 SHSAT Registrations and Testers.csv")
school <- read_csv("2016 School Explorer.csv")
head(reg)
head(school)
reg<- reg %>%
rename(school = `School name`,
year = `Year of SHST`,
grade = `Grade level`,
enroll = `Enrollment on 10/31`,
registered = `Number of students who registered for the SHSAT`,
took = `Number of students who took the SHSAT`)
#Finding the average number of students at each school, how many registered, and how many took the test
reg<- reg %>%
group_by(school) %>%
mutate_if(is.numeric, mean) %>%
mutate_if(is.character, funs(paste(unique(.), collapse = "_"))) %>%
distinct()
#Changing the case will let us match and eventually join the tables.
reg$school<-toupper(reg$school)
#Let's remove some columns that have no use for our future analysis.
reg<-reg %>%
select(-year )%>%
select(-grade)
#Calculating percentages of those who registered of the total population, registered AND took the test, and those who took the test of the total population
reg<-reg%>%
mutate(regPct = registered/enroll)%>%
mutate(tookPct = took/enroll)%>%
mutate(yield = took/registered)
#What does the table currently look like?
head(reg)
#Let's clean up the other sheet
school<-read_csv("2016 School Explorer.csv")
#what does the table look like?
head (school)
#renaming some columns
head(school)
school<- school %>%
rename(school = `School Name`,
address = `Address (Full)`,
DBN = `Location Code`,
lat =  Latitude,
long = Longitude,
zip = Zip,
eni = `Economic Need Index`,
district = District,
commSchool = `Community School?`,
income = `School Income Estimate`,
pctELL = `Percent ELL`,
pctAsian = `Percent Asian`,
pctBlack = `Percent Black`,
pctBlackHispanic = `Percent Black / Hispanic`,
pctHispanic = `Percent Hispanic`,
pctWhite = `Percent White`,
pctAttend = `Student Attendance Rate`,
pctAbsentChronic = `Percent of Students Chronically Absent`,
pctRigor = `Rigorous Instruction %`,
ratingRigor = `Rigorous Instruction Rating`,
pctCollab = `Collaborative Teachers %`,
ratingCollab = `Collaborative Teachers Rating`,
pctSupp = `Supportive Environment %`,
ratingSupp = `Supportive Environment Rating`,
pctLeader = `Effective School Leadership %`,
ratingLeader = `Effective School Leadership Rating`,
pctCommunity = `Strong Family-Community Ties %`,
ratingCommunity = `Strong Family-Community Ties Rating`,
pctTrust = `Trust %`,
ratingTrust = `Trust Rating`,
avgELA = `Average ELA Proficiency`,
avgMath = `Average Math Proficiency`,
mathAll = `Grade 8 Math - All Students Tested`,
mathAll4 = `Grade 8 Math 4s - All Students`,
mathBlack = `Grade 8 Math 4s - Black or African American`,
mathHispanic = `Grade 8 Math 4s - Hispanic or Latino`,
mathAsian = `Grade 8 Math 4s - Asian or Pacific Islander`,
mathWhite = `Grade 8 Math 4s - White`,
elaAll = `Grade 8 ELA - All Students Tested`,
elaAll4 = `Grade 8 ELA 4s - All Students`,
elaBlack = `Grade 8 ELA 4s - Black or African American`,
elaHispanic = `Grade 8 ELA 4s - Hispanic or Latino`,
elaAsian = `Grade 8 ELA 4s - Asian or Pacific Islander`,
elaWhite = `Grade 8 ELA 4s - White` )
#remove unneccessary columns
school<-school%>%
select(-`Adjusted Grade`)%>%
select(-`New?`)%>%
select(-`Other Location Code in LCGMS`)%>%
select(-`SED Code`)%>%
select(-starts_with('Grade'))
#now we want to join the tables together
school_clean <- full_join(school, reg, by = "DBN" )
#changing some columns to numeric values (as they should be)
school_clean<- school_clean %>%
mutate_at(vars(contains('pct')),funs(as.numeric(gsub("%", "", ., fixed = TRUE))/100)) %>%
mutate(income = as.numeric(gsub('\\$|,', '', income))) %>%
mutate(eni = as.numeric(eni))%>%
mutate(avgELA = as.numeric(avgELA),
avgMath = as.numeric(avgMath))
#making some final touches on our new table
school_clean <- school_clean%>%
filter(!is.na(school.x))%>%
select(-school.y)%>%
rename(school = school.x)
#let's turn some qualitative ratings into quantitative scores. First, let's create a function to make creating these new columns easier.
quantScore <- function(x){
if_else(grepl("Not Meeting Target", x),1 ,
if_else(grepl("Approaching Target", x),2 ,
if_else(grepl("Meeting Target", x),3 ,
if_else(grepl("Exceeding Target", x), 4, 0))))
}
school_clean<- school_clean%>%
mutate(quantRigor = quantScore(ratingRigor)) %>%
mutate(quantCollab = quantScore(ratingCollab)) %>%
mutate(quantSupp = quantScore(ratingSupp)) %>%
mutate(quantLeader = quantScore(ratingLeader)) %>%
mutate(quantCommunity = quantScore(ratingCommunity)) %>%
mutate(quantTrust = quantScore(ratingTrust))
school_clean <- school_clean%>%
mutate(pctELA4 = elaAll4 / elaAll,
pctELABlack = elaBlack / elaAll,
pctELAHispanic = elaHispanic / elaAll,
pctELAAsian = elaAsian / elaAll,
pctELAWhite = elaWhite/ elaAll,
pctMath4 = mathAll4 / mathAll,
pctMathBlack = mathBlack / mathAll,
pctMathHispanic = mathHispanic / mathAll,
pctMathAsian = mathAsian / mathAll,
pctMathWhite = mathWhite / mathAll)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(corrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
reg <- read_csv("D5 SHSAT Registrations and Testers.csv")
school <- read_csv("2016 School Explorer.csv")
head(reg)
head(school)
reg<- reg %>%
rename(school = `School name`,
year = `Year of SHST`,
grade = `Grade level`,
enroll = `Enrollment on 10/31`,
registered = `Number of students who registered for the SHSAT`,
took = `Number of students who took the SHSAT`)
#Finding the average number of students at each school, how many registered, and how many took the test
reg<- reg %>%
group_by(school) %>%
mutate_if(is.numeric, mean) %>%
mutate_if(is.character, funs(paste(unique(.), collapse = "_"))) %>%
distinct()
#Changing the case will let us match and eventually join the tables.
reg$school<-toupper(reg$school)
#Let's remove some columns that have no use for our future analysis.
reg<-reg %>%
select(-year )%>%
select(-grade)
#Calculating percentages of those who registered of the total population, registered AND took the test, and those who took the test of the total population
reg<-reg%>%
mutate(regPct = registered/enroll)%>%
mutate(tookPct = took/enroll)%>%
mutate(yield = took/registered)
#What does the table currently look like?
head(reg)
#Let's clean up the other sheet
school<-read_csv("2016 School Explorer.csv")
#what does the table look like?
head (school)
#renaming some columns
head(school)
school<- school %>%
rename(school = `School Name`,
address = `Address (Full)`,
DBN = `Location Code`,
lat =  Latitude,
long = Longitude,
zip = Zip,
eni = `Economic Need Index`,
district = District,
commSchool = `Community School?`,
income = `School Income Estimate`,
pctELL = `Percent ELL`,
pctAsian = `Percent Asian`,
pctBlack = `Percent Black`,
pctBlackHispanic = `Percent Black / Hispanic`,
pctHispanic = `Percent Hispanic`,
pctWhite = `Percent White`,
pctAttend = `Student Attendance Rate`,
pctAbsentChronic = `Percent of Students Chronically Absent`,
pctRigor = `Rigorous Instruction %`,
ratingRigor = `Rigorous Instruction Rating`,
pctCollab = `Collaborative Teachers %`,
ratingCollab = `Collaborative Teachers Rating`,
pctSupp = `Supportive Environment %`,
ratingSupp = `Supportive Environment Rating`,
pctLeader = `Effective School Leadership %`,
ratingLeader = `Effective School Leadership Rating`,
pctCommunity = `Strong Family-Community Ties %`,
ratingCommunity = `Strong Family-Community Ties Rating`,
pctTrust = `Trust %`,
ratingTrust = `Trust Rating`,
avgELA = `Average ELA Proficiency`,
avgMath = `Average Math Proficiency`,
mathAll = `Grade 8 Math - All Students Tested`,
mathAll4 = `Grade 8 Math 4s - All Students`,
mathBlack = `Grade 8 Math 4s - Black or African American`,
mathHispanic = `Grade 8 Math 4s - Hispanic or Latino`,
mathAsian = `Grade 8 Math 4s - Asian or Pacific Islander`,
mathWhite = `Grade 8 Math 4s - White`,
elaAll = `Grade 8 ELA - All Students Tested`,
elaAll4 = `Grade 8 ELA 4s - All Students`,
elaBlack = `Grade 8 ELA 4s - Black or African American`,
elaHispanic = `Grade 8 ELA 4s - Hispanic or Latino`,
elaAsian = `Grade 8 ELA 4s - Asian or Pacific Islander`,
elaWhite = `Grade 8 ELA 4s - White` )
#remove unneccessary columns
school<-school%>%
select(-`Adjusted Grade`)%>%
select(-`New?`)%>%
select(-`Other Location Code in LCGMS`)%>%
select(-`SED Code`)%>%
select(-starts_with('Grade'))
#now we want to join the tables together
school_clean <- full_join(school, reg, by = "DBN" )
#changing some columns to numeric values (as they should be)
school_clean<- school_clean %>%
mutate_at(vars(contains('pct')),funs(as.numeric(gsub("%", "", ., fixed = TRUE))/100)) %>%
mutate(income = as.numeric(gsub('\\$|,', '', income))) %>%
mutate(eni = as.numeric(eni))%>%
mutate(avgELA = as.numeric(avgELA),
avgMath = as.numeric(avgMath))
#making some final touches on our new table
school_clean <- school_clean%>%
filter(!is.na(school.x))%>%
select(-school.y)%>%
rename(school = school.x)
#let's turn some qualitative ratings into quantitative scores. First, let's create a function to make creating these new columns easier.
quantScore <- function(x){
if_else(grepl("Not Meeting Target", x),1 ,
if_else(grepl("Approaching Target", x),2 ,
if_else(grepl("Meeting Target", x),3 ,
if_else(grepl("Exceeding Target", x), 4, 0))))
}
school_clean<- school_clean%>%
mutate(quantRigor = quantScore(ratingRigor)) %>%
mutate(quantCollab = quantScore(ratingCollab)) %>%
mutate(quantSupp = quantScore(ratingSupp)) %>%
mutate(quantLeader = quantScore(ratingLeader)) %>%
mutate(quantCommunity = quantScore(ratingCommunity)) %>%
mutate(quantTrust = quantScore(ratingTrust))
school_clean <- school_clean%>%
mutate(pctELA4 = elaAll4 / elaAll,
pctELABlack = elaBlack / elaAll,
pctELAHispanic = elaHispanic / elaAll,
pctELAAsian = elaAsian / elaAll,
pctELAWhite = elaWhite/ elaAll,
pctMath4 = mathAll4 / mathAll,
pctMathBlack = mathBlack / mathAll,
pctMathHispanic = mathHispanic / mathAll,
pctMathAsian = mathAsian / mathAll,
pctMathWhite = mathWhite / mathAll)
write_csv(school_clean, "SHSAT_data.csv")
str(school_clean)
ggplot(school_clean, aes(pctBlack)) +
geom_histogram(bins = 10) +
labs(title="Percentage of Black Students",
x= "Percent",
y="Count")
ggplot(school_clean, aes(pctAsian)) +
geom_histogram(bins = 10) +
labs(title="Percentage of Asian Students",
x= "Percent",
y="Count")
ggplot(school_clean, aes(pctHispanic)) +
geom_histogram(bins = 10) +
labs(title="Percentage of Hispanic Students",
x= "Percent",
y="Count")
ggplot(school_clean, aes(pctWhite)) +
geom_histogram(bins = 10) +
labs(title="Percentage of White Students",
x= "Percent",
y="Count")
#We can use avgMath because it is multicollinear with avgELA.
ggplot(school_clean, aes(eni, avgMath)) +
geom_point() +
stat_smooth(method = "lm") +
labs(title="As ENI increases, scores decrease.",
x= "ENI",
y="Average Math Scores")
ggplot(school_clean, aes( as.factor(district), eni)) +
geom_violin() +
labs(title="ENI of NY School Districts",
x= "District",
y="Economic Need Index")
ggplot(school_clean, aes(pctHispanic, avgMath)) +
geom_point(col = ifelse(school_clean$avgMath > 3.0 & school_clean$pctHispanic>.50, "red", "black"))
Hispanic <- school_clean%>%
filter(avgMath >=3.0)%>%
filter(pctHispanic>=.5)
Hispanic
ggplot(school_clean, aes(pctBlack, avgMath)) +
geom_point(col = ifelse(school_clean$avgMath > 3.0 & school_clean$pctBlack>.50, "red", "black"))
Black <- school_clean%>%
filter(avgMath >=3.0)%>%
filter(pctBlack>=.5)
hipo <- bind_rows(Hispanic, Black)
hipo
ggplot(hipo, aes(x = as.factor(district), y= avgMath)) +
geom_violin() +
labs(title="What Districts have the highest diversity and average scores?",
x= "District",
y="Average Math Scores")
ggplot(hipo, aes(district)) +
geom_bar(stat = "bin")
ggplot(hipo, aes(pctBlackHispanic, avgMath)) + geom_point() +stat_smooth(method = "lm")
hipo
numeric<- na.omit(school_clean)
numeric%>%
select(eni, income, yield, enroll, regPct, tookPct, starts_with('pct'), starts_with('avg'), starts_with('quant'))%>%
cor() %>%
corrplot(type = "upper", method = "square")
library("tidyverse", lib.loc="~/R/win-library/3.5")
install.packages("reshape")
library("ggplot2", lib.loc="~/R/win-library/3.5")
library("GGally", lib.loc="~/R/win-library/3.5")
library("tidyverse", lib.loc="~/R/win-library/3.5")
library("reshape2", lib.loc="~/R/win-library/3.5")
library("reshape", lib.loc="~/R/win-library/3.5")
library("reshape", lib.loc="~/R/win-library/3.5")
install.packages("tidyverse")
install.packages("tidyverse")
library("reshape2", lib.loc="~/R/win-library/3.5")
library("tidyverse", lib.loc="~/R/win-library/3.5")
detach("package:reshape2", unload=TRUE)
detach("package:tidyverse", unload=TRUE)
library("tidyverse", lib.loc="~/R/win-library/3.5")
knitr::opts_chunk$set(echo = TRUE)
school_clean%>%
gather(school_clean, key = school_clean, value = pctAsian )
school_clean%>%
gather(school_clean, key = school_clean, value = pctAsian )
school_clean%>%
gather(school_clean, key = school, value = pctAsian )
school_clean%>%
gather(school_clean, key = pctBlack, value = pctAsian )
school_clean%>%
gather( key = pctBlack, value = pctAsian )
school_clean%>%
gather(key = pctBlack, value = pctAsian )
school_clean%>%
gather(key = pctBlack, value = pctAsian)
school_clean%>%
gather(school_clean, race, percent, pctAsian:pctWhite, factor_key=TRUE)
school_clean%>%
gather(school_clean, race, percent, pctAsian:pctWhite, factor_key=TRUE)
school_clean%>%
gather(school_clean, race, percent, pctAsian:pctWhite, factor_key=TRUE)
library("tidyverse", lib.loc="~/R/win-library/3.5")
library("tidyr", lib.loc="~/R/win-library/3.5")
install.packages(c("callr", "digest", "fansi", "pkgconfig", "rlang", "scales", "stringi", "tinytex"))
library("tidyr", lib.loc="~/R/win-library/3.5")
library("tidyverse", lib.loc="~/R/win-library/3.5")
knitr::opts_chunk$set(echo = TRUE)
school_clean%>%
gather(school_clean, race, percent, pctAsian:pctWhite, factor_key=TRUE)
race<-gather(school_clean, race, percent, pctAsian:pctWhite, factor_key=TRUE)
race
head(race)
